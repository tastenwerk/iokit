#iokit-users
  .iokit-sidebar
    .iokit-tree

      h1.title=t('users.title')

      .tree-controls
        a.btn.w-icn-only.live-tipsy( href='/users/new', original-title=t('users.new') )
          span.icn-plus.icn
        a.btn.w-icn-only.live-tipsy( href='#', original-title=t('refresh'), data-bind='click: fetchData' )
          span.icn.icn-refresh
        a.btn.w-icn-only.live-tipsy.enableable( href='#', original-title=t('delete_selected'), data-bind='css: {enabled: selectedItems().length > 0}, click: deleteSelected')
          span.icn.icn-trash

      br.clearfix

      ul.tree-content( data-bind='template: {name: "userItemTemplate", foreach: items}' )

  .iokit-content

    .click-for-details
      h1.title=t('users.title')
      span=t('users.click_for_details')

script(type='text/html', id='userItemTemplate')
  // ko if: $parent.showSuspended() || !suspended()
  li.tree-li( data-bind='attr: { "data-id": _id }, click: markSelected')
    .tree-item
      a.pull-right.show-details-arr( data-bind='click: showForm')
        span.icn.icn-arr-right
        | &nbsp;
      a.pull-right( data-bind='click: toggleSuspendUser' )
        span.icn.icn-locked( data-bind='css: {unlocked: !suspended()}' )
      a.link-trigger( href='#', data-bind='text: name().full, click: showForm' )
  // /ko

script(type='text/javascript')
  $('#iokit-users .iokit-tree').iokitTree({
    url: '/users.json',
    deleteSelected: function( tree ){
      for( var i in tree.treeViewModel.selectedItems() )
        $.ajax({ url: '/users/'+tree.treeViewModel.selectedItems()[i]._id,
                 type: 'delete',
                 dataType: 'json',
                 data: { _csrf: $('#_csrf').val() },
                 success: function( response ){
                    if( response.success ){
                      tree.treeViewModel.selectedItems.remove( tree.treeViewModel.selectedItems()[i] );
                      tree.treeViewModel.items.remove( tree.treeViewModel.selectedItems()[i] );
                    }
                    iokit.notify( response.flash );
                 }
        });
    },
    before: function( tree ){
      tree.treeViewModel.showSuspended = ko.observable(false);
      tree.TreeItemModel.prototype.toggleSuspendUser = function( item, e ){
        console.log('toggle suspend');
      };
    }
  })