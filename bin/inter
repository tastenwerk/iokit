#!/usr/bin/env node

var program = require('commander')
  , fs = require('fs')
  , os = require('os');

program
  .version('0.0.1')

var eol = 'win32' == os.platform() ? '\r\n' : '\n'

var app_js = [
"var express = require('express')",
"  , http = require('http')",
"  , path = require('path')",
"  , i18next = require('i18next')",
"  , fs = require('fs')",
"  , inter = require('inter');",
"",
"",
"i18next.init({",
"    resGetPath: __dirname + '/public/locales/__lng__/__ns__.json',",
"    fallbackLng: 'en',",
"    saveMissing: true,",
"    dynamicLoad: true",
"});",
"",
"var access_logfile = fs.createWriteStream('./app.log', {flags: 'a'})",
"  , app = express();",
"",
"app.configure(function(){",
"  app.set('port', process.env.PORT || 3000);",
"  app.set('views', __dirname + '/app/views');",
"  app.set('view engine', 'jade');",
"",
"  app.set('view options', { pretty: true });",
"",
"  app.use(express.favicon( __dirname + '/public/favicon.ico' ));",
"  //app.use(express.logger({stream: access_logfile }));",
"  app.use(express.logger('dev'));",
"  app.use(express.bodyParser());",
"  app.use(i18next.handle);",
"",
"  inter.inject( app ); // inject app with inter defaults and plugins",
"",
"  app.use(express.methodOverride());",
"  app.use(express.cookieParser('app'));",
"  app.use(express.session());",
"  app.use(app.router);",
"  app.use(require('stylus').middleware(__dirname + '/public'));",
"  app.use(express.static(path.join(__dirname, 'public')));",
"});",
"",
"i18next.registerAppHelper(app);",
"",
"app.configure('development', function(){",
"  app.use(express.errorHandler());",
"});",
"",
"http.createServer(app).listen(app.get('port'), function(){",
"  console.log('INTER server listening on port ' + app.get('port'));",
"});",
""
].join(eol);

var settings_json = [
'{',
'"site": {',
'  "title": "__appName__",',
'    "domain": "localhost.loc"',
'  },',
'  "port": 3000,',
'  "db": "mongodb://localhost:27017/__appName__?auto_reconnect",',
'    "mailerSettings": { "host": "localhost.loc", "port": 25, "domain": "localhost.loc", "authentication": false }',
'}'
].join(eol);

var package_json = [
'{',
'  "name": "__appName__",',
'  "version": "0.0.1",',
'  "preferGlobal": "true",',
'  "main": "index",',
'  "dependencies": {',
'    "express": "*",',
'    "jade": "*",',
'    "stylus": "*",',
'    "i18next": "*",',
'    "inter": "*",',
'    "konter": "*"',
'  },',
'  "license": "GPL3",',
'  "engine": {',
'    "node": ">=0.8"',
'  }',
'}'
].join(eol);

program
  .command('new <name>')
  .description('create a new inter scaffold')
  .action( function createScaffold( name ){
    mkdir( name );
    mkdir( name + '/app');
    mkdir( name + '/app/plugins');
    mkdir( name + '/app/views');
    mkdir( name + '/config');
    mkdir( name + '/public');
    mkdir( name + '/public/stylesheets');
    mkdir( name + '/public/javascripts');
    mkdir( name + '/public/images');
    write( name + '/app.js', app_js );
    write( name + '/config/inter.json', settings_json.replace( /__appName__/g, name.replace(/ /g, '_') ) );
    write( name + '/package.json', package_json.replace( /__appName__/g, name.replace(/ /g, '_') ) );
    write( name + '/README.md', name + ' README' );
    console.log();
    console.log('   \x1b[32msuccess\x1b[0m');
    console.log();
  });

program
  .command('setup [configfile]')
  .description('setup a manager user and if specified in the configuration website and -pages. If config/tas10_settings.json is not present, it should be passed as argument')
  .action( function setupScaffold( configfile ){
    console.log();
    configfile || (configfile = './config/inter.json' )
    if( !fs.existsSync( './' + configfile ) )
      return console.log('   \033[31merror\033[0m : ', configfile, ' was not found (if not config/inter.json, please pass it as argment)');
    openConnection( configfile );
    console.log();
  })

program.parse(process.argv);

/**
 * echo str > path.
 *
 * @param {String} path
 * @param {String} str
 */

function write(path, str) {
  fs.writeFile(path, str);
  console.log('   \x1b[36mcreate\x1b[0m : ' + path);
}

/**
 * Mkdir -p.
 *
 * @param {String} path
 * @param {Function} fn
 */

function mkdir(path) {
  try{
    fs.mkdirSync( path );
    console.log('   \033[36mcreate\033[0m : ' + path);
  } catch( e ){
    console.log('   \033[31mskipped\033[0m : ' + path + ' exists');
  }
}

function openConnection( configfile ){

  var settings = JSON.parse( fs.readFileSync( configfile ) );
  var tas10core = require('tas10core');
  if( !settings.db )
    return exitError( configfile + ' does not provide db information. Please check')
  tas10core.connect( settings.db );

  var User = tas10core.getUser();
  User.query().where('name', 'manager').first( function( err, user ){
    if( user ){
      console.log('   \033[31mskipped\033[0m : user manager alreadye exists');
      console.log();
      process.exit(0);
    } else
      User.create({name: 'manager', password: 'manager'}, function( err, user ){
        if( err )
          exitError( err.message );
        else
          console.log('   \033[36mcreate\033[0m : user ', user.name, ' with password manager.' );

        console.log();
        
        process.exit(0);

      });

  });

}

function exitError( msg ){
  console.log('   \033[31merror\033[0m : ' + msg );
}
