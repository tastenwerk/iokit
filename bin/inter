#!/usr/bin/env node

var program = require('commander')
  , fs = require('fs')
  , os = require('os');

program
  .version('0.0.1')

var eol = 'win32' == os.platform() ? '\r\n' : '\n'

var app_js = ['/**',
' * tas10box application startup file',
' */',
'',
'var tas10box = require(\'tas10box\');',
'tas10box.start();',
''
].join(eol);

var settings_json = JSON.stringify({
  "site": {
    "title": "My tas10box app",
    "domain": "localhost"
  },
  "port": 8080,
  "db": "mongodb://localhost:27017/my_tas10box_app?auto_reconnect",
    "mailerSettings": { "host": "localhost", "port": 25, "domain": "localhost", "authentication": false },
  "plugins": {}
});

program
  .command('new <name>')
  .description('create a new crevis scaffold')
  .action( function createScaffold( name ){
    mkdir( name );
    mkdir( name + '/app');
    mkdir( name + '/app/routes');
    mkdir( name + '/app/models');
    mkdir( name + '/app/views');
    mkdir( name + '/config');
    mkdir( name + '/public');
    mkdir( name + '/public/stylesheets');
    mkdir( name + '/public/javascripts');
    mkdir( name + '/public/images');
    write( name + '/app.js', app_js );
    write( name + '/config/tas10_settings.json', settings_json );
    console.log();
    console.log('   \x1b[32msuccess\x1b[0m');
    console.log();
  });

program
  .command('setup [configfile]')
  .description('setup a manager user and if specified in the configuration website and -pages. If config/tas10_settings.json is not present, it should be passed as argument')
  .action( function setupScaffold( configfile ){
    console.log();
    configfile || (configfile = './config/tas10_settings.json' )
    if( !fs.existsSync( './' + configfile ) )
      return console.log('   \033[31merror\033[0m : ', configfile, ' was not found (if not config/tas10_settings.json, please pass it as argment)');
    openConnection( configfile );
    console.log();
  })

program.parse(process.argv);

/**
 * echo str > path.
 *
 * @param {String} path
 * @param {String} str
 */

function write(path, str) {
  fs.writeFile(path, str);
  console.log('   \x1b[36mcreate\x1b[0m : ' + path);
}

/**
 * Mkdir -p.
 *
 * @param {String} path
 * @param {Function} fn
 */

function mkdir(path) {
  try{
    fs.mkdirSync( path );
    console.log('   \033[36mcreate\033[0m : ' + path);
  } catch( e ){
    console.log('   \033[31mskipped\033[0m : ' + path + ' exists');
  }
}

function openConnection( configfile ){

  var settings = JSON.parse( fs.readFileSync( configfile ) );
  var tas10core = require('tas10core');
  if( !settings.db )
    return exitError( configfile + ' does not provide db information. Please check')
  tas10core.connect( settings.db );

  var User = tas10core.getUser();
  User.query().where('name', 'manager').first( function( err, user ){
    if( user ){
      console.log('   \033[31mskipped\033[0m : user manager alreadye exists');
      console.log();
      process.exit(0);
    } else
      User.create({name: 'manager', password: 'manager'}, function( err, user ){
        if( err )
          exitError( err.message );
        else
          console.log('   \033[36mcreate\033[0m : user ', user.name, ' with password manager.' );

        console.log();
        
        process.exit(0);

      });

  });

}

function exitError( msg ){
  console.log('   \033[31merror\033[0m : ' + msg );
}
